<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/user/css/editprofile.css">
    <link rel="icon" href="/user/images/loadlogo.png">
    <title>Cleio | edit-profile</title>

    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css" rel="stylesheet" />

    <link rel="stylesheet" href="/user/cropperjs/cropper.css">
    <script src="/user/cropperjs/cropper.js"></script>

    <title>Home</title>

</head>

<body>



    <!-- Modal -->
    <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog"
        aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Change Profile Image</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="display: flex; justify-content:center;align-items:center;">
                    <img src="" alt="" id="edit_image" style="height: 100% !important; width: 100% !important;">

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" id="btn-crop" data-dismiss="modal" class="btn btn-primary">Save
                        changes</button>
                </div>
            </div>
        </div>
    </div>

    <%- include('../partials/user/nav_w_search') %>
        <div class="main">
            <div class="userdetails">
                <div class="head">
                    <span id="profile">PROFILE</span>
                </div>

                <form id="profileForm" enctype="multipart/form-data" onsubmit="validateForm(event)">
                    <div class="first">
                        <div class="left">
                            <div class="profile-picture" onclick="triggerFileInput()">
                                <input type="file" name="profile" id="profilePicture" accept="image/*"
                                    style="display: none;" onchange="displaySelectedImage()">
                                <label for="profilePicture">
                                    <img src="<%=user.Profile%>"
                                        style="background-image:url(/user/images/default_profile.jpg) ;background-position: center; background-size: contain;"
                                        id="previewImage" style="width:100%; height: 100%;">
                                </label>
                                <button id="deleteButton" style="display: none;" onclick="deleteSelectedImage(event)"
                                    formnovalidate>Delete</button>

                            </div>
                        </div>
                        <div class="right">
                            <div class="name">
                                <div class="firstname">
                                    <label for="firstname">First name</label>
                                    <input type="text" name="firstname" value="<%=user.Firstname%>" id="firstname">
                                    <div id="firstNameError" style="color: red;"></div>
                                </div>
                                <div class="secondname">
                                    <label for="secondname">Second name</label>
                                    <input type="text" name="secondname" value="<%=user.Secondname%>" id="secondname">
                                    <div id="secondNameError" style="color: red;"></div>
                                </div>
                            </div>
                            <div class="emailandmobile">
                                <div class="email">
                                    <label for="email">Email</label>
                                    <input type="text" name="email" value="<%=user.Email%>" id="email" readonly>
                                    <div id="emailError" style="color: red;"></div>
                                </div>
                                <div class="phone">
                                    <label for="phone">Phone number</label>
                                    <input type="text" name="phone" value="<%=user.Mobile%>" id="phone">
                                    <div id="phonenumberError" style="color: red;"></div>
                                </div>
                            </div>

                            <div class="saveandcancel">
                                <button onclick="save(event)" type="submit">Save</button>
                                <button onclick="cancel(event)">Cancel</button>
                            </div>
                        </div>
                    </div>
                </form>

            </div>
            <div class="passwordchange">
                <div class="passhead">
                    <span>CHANGE PASSWORD</span>
                </div>

                <div class="changepass">
                    <label class="passlab" for="currentpassword">Current Password</label>
                    <input type="password" class="pass" name="currentpassword" id="currentpassword">
                    <div id="CurrentError" style="color: red; margin-left: 20px;"></div>
                    <label class="passlab" for="newpassword">New Password</label>
                    <input type="text" class="pass" name="newpassword" id="newpassword">
                    <div id="newError" style="color: red; margin-left: 20px;"></div>
                    <label class="passlab" for="confirmtpassword">Confirm Password</label>
                    <input type="text" class="pass" name="confirmpassword" id="confirmpassword">
                    <div id="confirmError" style="color: red; margin-left: 20px;"></div>
                    <button class="button" onclick="changepassword()">save</button>
                </div>

            </div>
            <div id="snackbar">Password changed successfully..</div>
        </div>

        <script>
            let cropper;

            function crop() {
                const image = document.getElementById('edit_image')

                if (cropper) {
                    cropper.destroy();
                }

                var cropper = new Cropper(image, {
                    aspectRatio: 0,
                    viewMode: 0
                });

                document.querySelector('#btn-crop').addEventListener('click', function () {
                    var croppedImage = cropper.getCroppedCanvas().toDataURL('image/png');
                    document.getElementById('previewImage').src = croppedImage;

                })
            }
            document.getElementsByName('profile')[0].addEventListener('change', function () {
                if (cropper) {
                    cropper.destroy();
                }

            });

            const profile = '<%=profile%>'

            if (profile == 'true') {
                myFunctions();

            }
            function myFunctions() {
                var x = document.getElementById("snackbar");
                x.textContent = "profile updated.."
                x.className = "show";
                setTimeout(function () {
                    x.className = x.className.replace("show", "");
                }, 3000);
            }

            function displaySelectedImage() {

                $('#exampleModalCenter').modal('show');
                const edit_image = document.getElementById('edit_image')
                const previewImage = document.getElementById('previewImage');
                const deleteButton = document.getElementById('deleteButton');
                const fileInput = document.getElementById('profilePicture');
                const selectedImage = fileInput.files[0];

                localStorage.setItem("image", selectedImage)
                if (selectedImage) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        edit_image.src = e.target.result; localStorage.setItem("image", e.target.result);
                        // edit_image.style.height = '600px'
                        deleteButton.style.display = 'inline-block';

                        crop()
                    };

                    reader.readAsDataURL(selectedImage);

                }
            }

            function deleteSelectedImage(event) {
                const previewImage = document.getElementById('previewImage');
                const deleteButton = document.getElementById('deleteButton');
                const fileInput = document.getElementById('profilePicture');

                previewImage.src = "<%=user.Profile%>";
                deleteButton.style.display = 'none';
                fileInput.value = '';
                event.preventDefault();
            }
            let phone_val = "<%=user.Mobile%>";
            let firstname_val = "<%=user.Firstname%>";
            let secondname_val = "<%=user.Firstname%>"
            let profile_val = "<%=user.Profile%>";
            function cancel(event) {
                event.preventDefault(); // Add this line to prevent form submission

                const previewImage = document.getElementById('previewImage');
                const deleteButton = document.getElementById('deleteButton');
                const fileInput = document.getElementById('profilePicture');
                const firstname = document.getElementById('firstname');
                const secondname = document.getElementById('secondname');
                const phone = document.getElementById('phone');

                phone.value = phone_val
                secondname.value = secondname_val
                firstname.value = firstname_val
                previewImage.src = profile_val
                deleteButton.style.display = 'none';
                fileInput.value = '';
                cropper.destroy();
            }


            function isEmpty(value) {
                const trimmedValue = value.trim();
                return trimmedValue === "";
            }

            function validatePassword(password) {
                const strongPasswordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#\$%^&*])[A-Za-z\d!@#\$%^&*]{8,}$/;
                return strongPasswordPattern.test(password);
            }

            function validatePhone(phonenumber) {
                const phoneRegex = /^\d{10}$/;
                return phoneRegex.test(phonenumber);
            }
            async function save(event) {
                event.preventDefault()


                const firstname = document.getElementById('firstname').value;
                const secondname = document.getElementById('secondname').value;
                const phone = document.getElementById('phone').value;
                const profilePictureInput = document.getElementById('profilePicture');

                const firstnameError = document.getElementById('firstNameError');
                const secondnameError = document.getElementById('secondNameError');
                const phoneError = document.getElementById('phonenumberError');

                firstnameError.textContent = "";
                secondnameError.textContent = "";
                phoneError.textContent = "";

                if (isEmpty(firstname)) {
                    firstnameError.textContent = "First name can't be empty";
                    return;
                }
                if (isEmpty(secondname)) {
                    secondnameError.textContent = "Second name can't be empty";
                    return;
                }
                if (isEmpty(phone)) {
                    phoneError.textContent = "Number can't be empty";
                    return;
                }
                if (!validatePhone(phone)) {
                    phoneError.textContent = "Enter a 10-digit phone number";
                    return;
                }


                const cropper = document.getElementById('edit_image').cropper;
                let croppedImageBlob;
                if (cropper) {

                    croppedImageBlob = await new Promise(resolve => {
                        cropper.getCroppedCanvas().toBlob(blob => resolve(blob), 'image/');
                    });
                }


                const formData = new FormData();
                formData.append('firstname', firstname);
                formData.append('secondname', secondname);
                formData.append('phone', phone);
                if (croppedImageBlob) {

                    formData.append('profile', croppedImageBlob, 'cropped_image.png');

                }

                const deleteButton = document.getElementById('deleteButton');

                fetch('/editDetails', {
                    method: 'POST',
                    body: formData,
                })
                    .then(response => response.json())
                    .then(data => {
                        deleteButton.style.display = 'none';
                        myFunctions();
                        profile_val = data.img
                        secondname_val = secondname
                        firstname_val = firstname
                        phone_val = phone
                        cropper.destroy();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            }


            function changepassword() {
                const currentpassword = document.getElementById("currentpassword");
                const currentpasswordValue = currentpassword.value;
                const currentPasswordError = document.getElementById('CurrentError');

                const newPassword = document.getElementById("newpassword");
                const newPasswordValue = newPassword.value;
                const newPasswordError = document.getElementById('newError');

                const confirmpassword = document.getElementById("confirmpassword");
                const confirmpasswordValue = confirmpassword.value;
                const confirmError = document.getElementById('confirmError');

                currentPasswordError.textContent = "";
                newPasswordError.textContent = "";
                confirmError.textContent = "";

                if (isEmpty(currentpasswordValue)) {
                    currentPasswordError.textContent = "current password can't be empty";
                    event.preventDefault();
                    return;
                }
                if (isEmpty(newPasswordValue)) {
                    newPasswordError.textContent = "new password can't be empty";
                    event.preventDefault();
                    return;
                }
                if (isEmpty(confirmpasswordValue)) {
                    confirmError.textContent = "confirm password can't be empty";
                    event.preventDefault();
                    return;
                }

                if (!validatePassword(newPasswordValue)) {
                    newError.textContent =
                        "password is too weak"
                    event.preventDefault();
                    return;
                }
                if (newPasswordValue !== confirmpasswordValue) {
                    confirmError.textContent = "new password and confirm password are not same";
                    event.preventDefault();
                    return;
                }


                const data = {
                    currentpassword: currentpasswordValue,
                    newpassword: newPasswordValue,
                    confirmpassword: confirmpasswordValue
                };


                fetch('/changePassword', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                })
                    .then(response => {
                        if (!response.ok) {
                            return response.json();
                        }
                        return { success: true };
                    })
                    .then(data => {
                        if (data.error) {
                            currentPasswordError.textContent = data.error;
                        }
                        else if (data.error1) {
                            newPasswordError.textContent = data.error1;
                        } else {

                            currentpassword.value = "";
                            newPassword.value = "";
                            confirmpassword.value = "";
                            (function () {
                                function myFunction() {
                                    var x = document.getElementById("snackbar");
                                    x.className = "show";
                                    setTimeout(function () {
                                        x.className = x.className.replace("show", "");
                                    }, 3000);
                                }

                                myFunction();
                            })();


                        }
                    })
                    .catch((error) => {
                        console.error('Error:', error);
                    });
            }
        </script>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>


</body>

</html>